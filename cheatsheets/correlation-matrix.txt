=====================
PEARSON CORRELATION 
=====================

This method should be used if:
    - you expect a linear relationship between the coefficients 
    - both variables are continuous
    - both variables are normally distributed 

df.corr()

Compute a pairwise correlation of columns in a DF using the Pearson Correlation Coefficient by default. 

Pearson Correlation: 
    r = cov(X,Y)/(sd_x)(sd_y)

This method: 
    1. Standardizes each column by subtracting the mean and dividing by its standard deviation. 
    2. Computes the covariance between each pair of columns. 
    3. Divides the covariance by the product of the standard deviations. 

The result is a square matrix (DF) where each cell (i,j) represents the correlation coefficient between column i and column, j
    - 1.0: Perfect positive correlation (as one increases, so does the other). 
    - 0.0: No linear correlation 
    - (-1.0): Perfect negative correlation (as one increases, the other decreases). 

=========================
SPEARMAN RANK CORRELATION 
=========================

Non-parametric alternative to Pearson correlation, often used when data is not normally distributed and the relationship is not linear. 

df.corr(method = 'spearman')

This method converts values to ranks, then calculates Pearson corr on the ranked data. 
    - Handles nonlinear but monotonic relationships. 
    - Less sensitive to outliers than Pearson. 
    - Perfect Spearman correlation: all data points lie on a monotonic function. 

=========================
KENDALL'S TAU CORRELATION 
=========================

Measures monotonic association via a different approach by counting concordant and discordant pairs. 
    - More robust and interpretable in terms of probability. 
    - More conservative (values closer to 0 compared to Spearman). 
    - Slower to compute for large datasets. 
